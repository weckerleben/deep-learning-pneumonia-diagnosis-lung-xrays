2023-06-17 19:43:01,880 ERROR: Exception on /neumoscan [POST] [in /home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py:1414]
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2813, in fromarray
    mode, rawmode = _fromarray_typemap[typekey]
KeyError: ((1, 1, 224), '<f4')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py", line 72, in analizar_imagen
    pred = model.predict(image_tensor)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 321, in predict
    inp,preds,_,dec_preds = self.get_preds(dl=dl, with_input=True, with_decoded=True)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 308, in get_preds
    self._do_epoch_validate(dl=dl)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 244, in _do_epoch_validate
    with torch.no_grad(): self._with_events(self.all_batches, 'validate', CancelValidException)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 199, in _with_events
    try: self(f'before_{event_type}');  f()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 205, in all_batches
    for o in enumerate(self.dl): self.one_batch(*o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 127, in __iter__
    for b in _loaders[self.fake_l.num_workers==0](self.fake_l):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 628, in __next__
    data = self._next_data()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 671, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 43, in fetch
    data = next(self.dataset_iter)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 138, in create_batches
    yield from map(self.do_batch, self.chunkify(res))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/basics.py", line 230, in chunked
    res = list(itertools.islice(it, chunk_sz))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 153, in do_item
    try: return self.after_item(self.create_item(s))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 160, in create_item
    if self.indexed: return self.dataset[s or 0]
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in __getitem__
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in <listcomp>
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 417, in __getitem__
    return self._after_item(res) if is_indexer(idx) else res.map(self._after_item)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 377, in _after_item
    def _after_item(self, o): return self.tfms(o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 208, in __call__
    def __call__(self, o): return compose_tfms(o, tfms=self.fs, split_idx=self.split_idx)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 158, in compose_tfms
    x = f(x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 81, in __call__
    def __call__(self, x, **kwargs): return self._call('encodes', x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 91, in _call
    return self._do_call(getattr(self, fn), x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 97, in _do_call
    return retain_type(f(x, **kwargs), x, ret)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/dispatch.py", line 120, in __call__
    return f(*args, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/vision/core.py", line 122, in create
    if isinstance(fn,ndarray): return cls(Image.fromarray(fn))
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2815, in fromarray
    raise TypeError("Cannot handle this data type: %s, %s" % typekey) from e
TypeError: Cannot handle this data type: (1, 1, 224), <f4
2023-06-17 19:50:11,417 INFO: Imagen recibida y guardada con éxito [in /home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py:51]
2023-06-17 19:50:11,428 ERROR: Exception on /neumoscan [POST] [in /home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py:1414]
Traceback (most recent call last):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py", line 57, in analizar_imagen
    image = cv2.cvtColor(imagen_cv2, cv2.COLOR_BGR2RGB)
NameError: name 'imagen_cv2' is not defined
2023-06-17 19:53:27,045 INFO: Imagen recibida y guardada con éxito [in /home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py:51]
2023-06-17 19:53:27,058 ERROR: Exception on /neumoscan [POST] [in /home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py:1414]
Traceback (most recent call last):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py", line 58, in analizar_imagen
    image = cv2.cvtColor(imagen_cv2, cv2.COLOR_BGR2RGB)
NameError: name 'imagen_cv2' is not defined
2023-06-17 19:54:28,898 INFO: Imagen recibida y guardada con éxito en:tmp/2023/06/17/RX_20230617_195428897.jpeg [in /home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py:51]
2023-06-17 19:54:28,909 ERROR: Exception on /neumoscan [POST] [in /home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py:1414]
Traceback (most recent call last):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py", line 57, in analizar_imagen
    image = cv2.cvtColor(imagen_cv2, cv2.COLOR_BGR2RGB)
NameError: name 'imagen_cv2' is not defined
2023-06-17 19:55:17,930 INFO: Imagen recibida y guardada con éxito en:tmp/2023/06/17/RX_20230617_195517929.jpeg [in /home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py:51]
2023-06-17 19:55:17,941 ERROR: Exception on /neumoscan [POST] [in /home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py:1414]
Traceback (most recent call last):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py", line 57, in analizar_imagen
    image = cv2.cvtColor(imagen_cv2, cv2.COLOR_BGR2RGB)
NameError: name 'imagen_cv2' is not defined
2023-06-17 20:16:43,741 INFO: Imagen recibida y guardada con éxito en:tmp/2023/06/17/RX_20230617_201643741.jpeg [in /home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py:55]
2023-06-17 20:16:43,756 ERROR: Exception on /neumoscan [POST] [in /home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py:1414]
Traceback (most recent call last):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py", line 63, in analizar_imagen
    image = image.convert('L')
AttributeError: 'NoneType' object has no attribute 'convert'
2023-06-17 20:24:14,395 INFO: Imagen recibida y guardada con éxito en:tmp/2023/06/17/RX_20230617_202414395.jpeg [in /home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py:56]
2023-06-17 20:24:14,407 ERROR: Exception on /neumoscan [POST] [in /home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py:1414]
Traceback (most recent call last):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py", line 63, in analizar_imagen
    image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
cv2.error: OpenCV(4.7.0) /io/opencv/modules/imgproc/src/color.cpp:182: error: (-215:Assertion failed) !_src.empty() in function 'cvtColor'

2023-06-17 20:24:40,985 ERROR: Exception on /neumoscan [POST] [in /home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py:1414]
Traceback (most recent call last):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py", line 63, in analizar_imagen
    image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
cv2.error: OpenCV(4.7.0) /io/opencv/modules/imgproc/src/color.cpp:182: error: (-215:Assertion failed) !_src.empty() in function 'cvtColor'

2023-06-17 20:26:44,720 INFO: Imagen recibida y guardada con éxito en:tmp/2023/06/17/RX_20230617_202644720.jpeg [in /home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py:55]
2023-06-17 20:26:46,352 ERROR: Exception on /neumoscan [POST] [in /home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py:1414]
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2813, in fromarray
    mode, rawmode = _fromarray_typemap[typekey]
KeyError: ((1, 1, 224, 224), '<f4')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py", line 80, in analizar_imagen
    pred = model.predict(image_tensor)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 321, in predict
    inp,preds,_,dec_preds = self.get_preds(dl=dl, with_input=True, with_decoded=True)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 308, in get_preds
    self._do_epoch_validate(dl=dl)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 244, in _do_epoch_validate
    with torch.no_grad(): self._with_events(self.all_batches, 'validate', CancelValidException)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 199, in _with_events
    try: self(f'before_{event_type}');  f()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 205, in all_batches
    for o in enumerate(self.dl): self.one_batch(*o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 127, in __iter__
    for b in _loaders[self.fake_l.num_workers==0](self.fake_l):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 628, in __next__
    data = self._next_data()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 671, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 43, in fetch
    data = next(self.dataset_iter)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 138, in create_batches
    yield from map(self.do_batch, self.chunkify(res))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/basics.py", line 230, in chunked
    res = list(itertools.islice(it, chunk_sz))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 153, in do_item
    try: return self.after_item(self.create_item(s))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 160, in create_item
    if self.indexed: return self.dataset[s or 0]
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in __getitem__
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in <listcomp>
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 417, in __getitem__
    return self._after_item(res) if is_indexer(idx) else res.map(self._after_item)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 377, in _after_item
    def _after_item(self, o): return self.tfms(o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 208, in __call__
    def __call__(self, o): return compose_tfms(o, tfms=self.fs, split_idx=self.split_idx)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 158, in compose_tfms
    x = f(x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 81, in __call__
    def __call__(self, x, **kwargs): return self._call('encodes', x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 91, in _call
    return self._do_call(getattr(self, fn), x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 97, in _do_call
    return retain_type(f(x, **kwargs), x, ret)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/dispatch.py", line 120, in __call__
    return f(*args, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/vision/core.py", line 122, in create
    if isinstance(fn,ndarray): return cls(Image.fromarray(fn))
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2815, in fromarray
    raise TypeError("Cannot handle this data type: %s, %s" % typekey) from e
TypeError: Cannot handle this data type: (1, 1, 224, 224), <f4
2023-06-17 20:27:54,129 INFO: Imagen recibida y guardada con éxito en:tmp/2023/06/17/RX_20230617_202754128.jpeg [in /home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py:55]
2023-06-17 20:27:55,789 ERROR: Exception on /neumoscan [POST] [in /home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py:1414]
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2813, in fromarray
    mode, rawmode = _fromarray_typemap[typekey]
KeyError: ((1, 1, 224, 224), '<f4')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py", line 80, in analizar_imagen
    pred = model.predict(image_tensor)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 321, in predict
    inp,preds,_,dec_preds = self.get_preds(dl=dl, with_input=True, with_decoded=True)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 308, in get_preds
    self._do_epoch_validate(dl=dl)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 244, in _do_epoch_validate
    with torch.no_grad(): self._with_events(self.all_batches, 'validate', CancelValidException)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 199, in _with_events
    try: self(f'before_{event_type}');  f()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 205, in all_batches
    for o in enumerate(self.dl): self.one_batch(*o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 127, in __iter__
    for b in _loaders[self.fake_l.num_workers==0](self.fake_l):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 628, in __next__
    data = self._next_data()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 671, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 43, in fetch
    data = next(self.dataset_iter)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 138, in create_batches
    yield from map(self.do_batch, self.chunkify(res))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/basics.py", line 230, in chunked
    res = list(itertools.islice(it, chunk_sz))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 153, in do_item
    try: return self.after_item(self.create_item(s))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 160, in create_item
    if self.indexed: return self.dataset[s or 0]
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in __getitem__
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in <listcomp>
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 417, in __getitem__
    return self._after_item(res) if is_indexer(idx) else res.map(self._after_item)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 377, in _after_item
    def _after_item(self, o): return self.tfms(o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 208, in __call__
    def __call__(self, o): return compose_tfms(o, tfms=self.fs, split_idx=self.split_idx)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 158, in compose_tfms
    x = f(x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 81, in __call__
    def __call__(self, x, **kwargs): return self._call('encodes', x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 91, in _call
    return self._do_call(getattr(self, fn), x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 97, in _do_call
    return retain_type(f(x, **kwargs), x, ret)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/dispatch.py", line 120, in __call__
    return f(*args, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/vision/core.py", line 122, in create
    if isinstance(fn,ndarray): return cls(Image.fromarray(fn))
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2815, in fromarray
    raise TypeError("Cannot handle this data type: %s, %s" % typekey) from e
TypeError: Cannot handle this data type: (1, 1, 224, 224), <f4
2023-06-17 20:29:57,205 INFO: Imagen recibida y guardada con éxito en:tmp/2023/06/17/RX_20230617_202957204.jpeg [in /home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py:55]
2023-06-17 20:29:58,864 ERROR: Exception on /neumoscan [POST] [in /home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py:1414]
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2813, in fromarray
    mode, rawmode = _fromarray_typemap[typekey]
KeyError: ((1, 1, 224, 224), '<f4')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py", line 80, in analizar_imagen
    pred = model.predict(image_tensor)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 321, in predict
    inp,preds,_,dec_preds = self.get_preds(dl=dl, with_input=True, with_decoded=True)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 308, in get_preds
    self._do_epoch_validate(dl=dl)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 244, in _do_epoch_validate
    with torch.no_grad(): self._with_events(self.all_batches, 'validate', CancelValidException)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 199, in _with_events
    try: self(f'before_{event_type}');  f()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 205, in all_batches
    for o in enumerate(self.dl): self.one_batch(*o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 127, in __iter__
    for b in _loaders[self.fake_l.num_workers==0](self.fake_l):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 628, in __next__
    data = self._next_data()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 671, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 43, in fetch
    data = next(self.dataset_iter)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 138, in create_batches
    yield from map(self.do_batch, self.chunkify(res))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/basics.py", line 230, in chunked
    res = list(itertools.islice(it, chunk_sz))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 153, in do_item
    try: return self.after_item(self.create_item(s))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 160, in create_item
    if self.indexed: return self.dataset[s or 0]
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in __getitem__
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in <listcomp>
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 417, in __getitem__
    return self._after_item(res) if is_indexer(idx) else res.map(self._after_item)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 377, in _after_item
    def _after_item(self, o): return self.tfms(o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 208, in __call__
    def __call__(self, o): return compose_tfms(o, tfms=self.fs, split_idx=self.split_idx)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 158, in compose_tfms
    x = f(x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 81, in __call__
    def __call__(self, x, **kwargs): return self._call('encodes', x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 91, in _call
    return self._do_call(getattr(self, fn), x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 97, in _do_call
    return retain_type(f(x, **kwargs), x, ret)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/dispatch.py", line 120, in __call__
    return f(*args, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/vision/core.py", line 122, in create
    if isinstance(fn,ndarray): return cls(Image.fromarray(fn))
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2815, in fromarray
    raise TypeError("Cannot handle this data type: %s, %s" % typekey) from e
TypeError: Cannot handle this data type: (1, 1, 224, 224), <f4
2023-06-17 20:37:27,620 ERROR: Exception on /neumoscan [POST] [in /home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py:1414]
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2813, in fromarray
    mode, rawmode = _fromarray_typemap[typekey]
KeyError: ((1, 1, 224, 224), '<f4')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py", line 86, in analizar_imagen
    pred = model.predict(image_tensor)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 321, in predict
    inp,preds,_,dec_preds = self.get_preds(dl=dl, with_input=True, with_decoded=True)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 308, in get_preds
    self._do_epoch_validate(dl=dl)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 244, in _do_epoch_validate
    with torch.no_grad(): self._with_events(self.all_batches, 'validate', CancelValidException)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 199, in _with_events
    try: self(f'before_{event_type}');  f()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 205, in all_batches
    for o in enumerate(self.dl): self.one_batch(*o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 127, in __iter__
    for b in _loaders[self.fake_l.num_workers==0](self.fake_l):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 628, in __next__
    data = self._next_data()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 671, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 43, in fetch
    data = next(self.dataset_iter)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 138, in create_batches
    yield from map(self.do_batch, self.chunkify(res))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/basics.py", line 230, in chunked
    res = list(itertools.islice(it, chunk_sz))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 153, in do_item
    try: return self.after_item(self.create_item(s))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 160, in create_item
    if self.indexed: return self.dataset[s or 0]
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in __getitem__
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in <listcomp>
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 417, in __getitem__
    return self._after_item(res) if is_indexer(idx) else res.map(self._after_item)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 377, in _after_item
    def _after_item(self, o): return self.tfms(o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 208, in __call__
    def __call__(self, o): return compose_tfms(o, tfms=self.fs, split_idx=self.split_idx)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 158, in compose_tfms
    x = f(x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 81, in __call__
    def __call__(self, x, **kwargs): return self._call('encodes', x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 91, in _call
    return self._do_call(getattr(self, fn), x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 97, in _do_call
    return retain_type(f(x, **kwargs), x, ret)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/dispatch.py", line 120, in __call__
    return f(*args, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/vision/core.py", line 122, in create
    if isinstance(fn,ndarray): return cls(Image.fromarray(fn))
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2815, in fromarray
    raise TypeError("Cannot handle this data type: %s, %s" % typekey) from e
TypeError: Cannot handle this data type: (1, 1, 224, 224), <f4
2023-06-17 20:37:55,059 ERROR: Exception on /neumoscan [POST] [in /home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py:1414]
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2813, in fromarray
    mode, rawmode = _fromarray_typemap[typekey]
KeyError: ((1, 1, 224, 224), '<f4')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py", line 87, in analizar_imagen
    pred = model.predict(image_tensor)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 321, in predict
    inp,preds,_,dec_preds = self.get_preds(dl=dl, with_input=True, with_decoded=True)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 308, in get_preds
    self._do_epoch_validate(dl=dl)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 244, in _do_epoch_validate
    with torch.no_grad(): self._with_events(self.all_batches, 'validate', CancelValidException)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 199, in _with_events
    try: self(f'before_{event_type}');  f()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 205, in all_batches
    for o in enumerate(self.dl): self.one_batch(*o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 127, in __iter__
    for b in _loaders[self.fake_l.num_workers==0](self.fake_l):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 628, in __next__
    data = self._next_data()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 671, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 43, in fetch
    data = next(self.dataset_iter)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 138, in create_batches
    yield from map(self.do_batch, self.chunkify(res))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/basics.py", line 230, in chunked
    res = list(itertools.islice(it, chunk_sz))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 153, in do_item
    try: return self.after_item(self.create_item(s))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 160, in create_item
    if self.indexed: return self.dataset[s or 0]
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in __getitem__
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in <listcomp>
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 417, in __getitem__
    return self._after_item(res) if is_indexer(idx) else res.map(self._after_item)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 377, in _after_item
    def _after_item(self, o): return self.tfms(o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 208, in __call__
    def __call__(self, o): return compose_tfms(o, tfms=self.fs, split_idx=self.split_idx)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 158, in compose_tfms
    x = f(x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 81, in __call__
    def __call__(self, x, **kwargs): return self._call('encodes', x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 91, in _call
    return self._do_call(getattr(self, fn), x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 97, in _do_call
    return retain_type(f(x, **kwargs), x, ret)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/dispatch.py", line 120, in __call__
    return f(*args, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/vision/core.py", line 122, in create
    if isinstance(fn,ndarray): return cls(Image.fromarray(fn))
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2815, in fromarray
    raise TypeError("Cannot handle this data type: %s, %s" % typekey) from e
TypeError: Cannot handle this data type: (1, 1, 224, 224), <f4
2023-06-17 20:38:21,692 ERROR: Exception on /neumoscan [POST] [in /home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py:1414]
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2813, in fromarray
    mode, rawmode = _fromarray_typemap[typekey]
KeyError: ((1, 1, 224, 224), '<f4')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py", line 82, in analizar_imagen
    pred = model.predict(image_tensor)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 321, in predict
    inp,preds,_,dec_preds = self.get_preds(dl=dl, with_input=True, with_decoded=True)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 308, in get_preds
    self._do_epoch_validate(dl=dl)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 244, in _do_epoch_validate
    with torch.no_grad(): self._with_events(self.all_batches, 'validate', CancelValidException)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 199, in _with_events
    try: self(f'before_{event_type}');  f()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 205, in all_batches
    for o in enumerate(self.dl): self.one_batch(*o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 127, in __iter__
    for b in _loaders[self.fake_l.num_workers==0](self.fake_l):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 628, in __next__
    data = self._next_data()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 671, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 43, in fetch
    data = next(self.dataset_iter)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 138, in create_batches
    yield from map(self.do_batch, self.chunkify(res))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/basics.py", line 230, in chunked
    res = list(itertools.islice(it, chunk_sz))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 153, in do_item
    try: return self.after_item(self.create_item(s))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 160, in create_item
    if self.indexed: return self.dataset[s or 0]
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in __getitem__
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in <listcomp>
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 417, in __getitem__
    return self._after_item(res) if is_indexer(idx) else res.map(self._after_item)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 377, in _after_item
    def _after_item(self, o): return self.tfms(o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 208, in __call__
    def __call__(self, o): return compose_tfms(o, tfms=self.fs, split_idx=self.split_idx)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 158, in compose_tfms
    x = f(x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 81, in __call__
    def __call__(self, x, **kwargs): return self._call('encodes', x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 91, in _call
    return self._do_call(getattr(self, fn), x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 97, in _do_call
    return retain_type(f(x, **kwargs), x, ret)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/dispatch.py", line 120, in __call__
    return f(*args, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/vision/core.py", line 122, in create
    if isinstance(fn,ndarray): return cls(Image.fromarray(fn))
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2815, in fromarray
    raise TypeError("Cannot handle this data type: %s, %s" % typekey) from e
TypeError: Cannot handle this data type: (1, 1, 224, 224), <f4
2023-06-17 20:40:56,187 ERROR: Exception on /neumoscan [POST] [in /home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py:1414]
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2813, in fromarray
    mode, rawmode = _fromarray_typemap[typekey]
KeyError: ((1, 1, 224), '<f4')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py", line 79, in analizar_imagen
    pred = model.predict(image_tensor)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 321, in predict
    inp,preds,_,dec_preds = self.get_preds(dl=dl, with_input=True, with_decoded=True)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 308, in get_preds
    self._do_epoch_validate(dl=dl)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 244, in _do_epoch_validate
    with torch.no_grad(): self._with_events(self.all_batches, 'validate', CancelValidException)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 199, in _with_events
    try: self(f'before_{event_type}');  f()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 205, in all_batches
    for o in enumerate(self.dl): self.one_batch(*o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 127, in __iter__
    for b in _loaders[self.fake_l.num_workers==0](self.fake_l):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 628, in __next__
    data = self._next_data()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 671, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 43, in fetch
    data = next(self.dataset_iter)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 138, in create_batches
    yield from map(self.do_batch, self.chunkify(res))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/basics.py", line 230, in chunked
    res = list(itertools.islice(it, chunk_sz))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 153, in do_item
    try: return self.after_item(self.create_item(s))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 160, in create_item
    if self.indexed: return self.dataset[s or 0]
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in __getitem__
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in <listcomp>
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 417, in __getitem__
    return self._after_item(res) if is_indexer(idx) else res.map(self._after_item)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 377, in _after_item
    def _after_item(self, o): return self.tfms(o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 208, in __call__
    def __call__(self, o): return compose_tfms(o, tfms=self.fs, split_idx=self.split_idx)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 158, in compose_tfms
    x = f(x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 81, in __call__
    def __call__(self, x, **kwargs): return self._call('encodes', x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 91, in _call
    return self._do_call(getattr(self, fn), x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 97, in _do_call
    return retain_type(f(x, **kwargs), x, ret)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/dispatch.py", line 120, in __call__
    return f(*args, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/vision/core.py", line 122, in create
    if isinstance(fn,ndarray): return cls(Image.fromarray(fn))
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2815, in fromarray
    raise TypeError("Cannot handle this data type: %s, %s" % typekey) from e
TypeError: Cannot handle this data type: (1, 1, 224), <f4
2023-06-17 20:41:24,250 ERROR: Exception on /neumoscan [POST] [in /home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py:1414]
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2813, in fromarray
    mode, rawmode = _fromarray_typemap[typekey]
KeyError: ((1, 1, 224), '<f4')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py", line 78, in analizar_imagen
    pred = model.predict(image_tensor)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 321, in predict
    inp,preds,_,dec_preds = self.get_preds(dl=dl, with_input=True, with_decoded=True)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 308, in get_preds
    self._do_epoch_validate(dl=dl)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 244, in _do_epoch_validate
    with torch.no_grad(): self._with_events(self.all_batches, 'validate', CancelValidException)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 199, in _with_events
    try: self(f'before_{event_type}');  f()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 205, in all_batches
    for o in enumerate(self.dl): self.one_batch(*o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 127, in __iter__
    for b in _loaders[self.fake_l.num_workers==0](self.fake_l):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 628, in __next__
    data = self._next_data()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 671, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 43, in fetch
    data = next(self.dataset_iter)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 138, in create_batches
    yield from map(self.do_batch, self.chunkify(res))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/basics.py", line 230, in chunked
    res = list(itertools.islice(it, chunk_sz))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 153, in do_item
    try: return self.after_item(self.create_item(s))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 160, in create_item
    if self.indexed: return self.dataset[s or 0]
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in __getitem__
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in <listcomp>
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 417, in __getitem__
    return self._after_item(res) if is_indexer(idx) else res.map(self._after_item)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 377, in _after_item
    def _after_item(self, o): return self.tfms(o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 208, in __call__
    def __call__(self, o): return compose_tfms(o, tfms=self.fs, split_idx=self.split_idx)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 158, in compose_tfms
    x = f(x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 81, in __call__
    def __call__(self, x, **kwargs): return self._call('encodes', x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 91, in _call
    return self._do_call(getattr(self, fn), x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 97, in _do_call
    return retain_type(f(x, **kwargs), x, ret)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/dispatch.py", line 120, in __call__
    return f(*args, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/vision/core.py", line 122, in create
    if isinstance(fn,ndarray): return cls(Image.fromarray(fn))
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2815, in fromarray
    raise TypeError("Cannot handle this data type: %s, %s" % typekey) from e
TypeError: Cannot handle this data type: (1, 1, 224), <f4
2023-06-17 20:41:48,740 ERROR: Exception on /neumoscan [POST] [in /home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py:1414]
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2813, in fromarray
    mode, rawmode = _fromarray_typemap[typekey]
KeyError: ((1, 1, 224), '<f4')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py", line 78, in analizar_imagen
    pred = model.predict(image_tensor)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 321, in predict
    inp,preds,_,dec_preds = self.get_preds(dl=dl, with_input=True, with_decoded=True)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 308, in get_preds
    self._do_epoch_validate(dl=dl)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 244, in _do_epoch_validate
    with torch.no_grad(): self._with_events(self.all_batches, 'validate', CancelValidException)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 199, in _with_events
    try: self(f'before_{event_type}');  f()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 205, in all_batches
    for o in enumerate(self.dl): self.one_batch(*o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 127, in __iter__
    for b in _loaders[self.fake_l.num_workers==0](self.fake_l):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 628, in __next__
    data = self._next_data()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 671, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 43, in fetch
    data = next(self.dataset_iter)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 138, in create_batches
    yield from map(self.do_batch, self.chunkify(res))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/basics.py", line 230, in chunked
    res = list(itertools.islice(it, chunk_sz))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 153, in do_item
    try: return self.after_item(self.create_item(s))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 160, in create_item
    if self.indexed: return self.dataset[s or 0]
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in __getitem__
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in <listcomp>
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 417, in __getitem__
    return self._after_item(res) if is_indexer(idx) else res.map(self._after_item)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 377, in _after_item
    def _after_item(self, o): return self.tfms(o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 208, in __call__
    def __call__(self, o): return compose_tfms(o, tfms=self.fs, split_idx=self.split_idx)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 158, in compose_tfms
    x = f(x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 81, in __call__
    def __call__(self, x, **kwargs): return self._call('encodes', x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 91, in _call
    return self._do_call(getattr(self, fn), x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 97, in _do_call
    return retain_type(f(x, **kwargs), x, ret)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/dispatch.py", line 120, in __call__
    return f(*args, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/vision/core.py", line 122, in create
    if isinstance(fn,ndarray): return cls(Image.fromarray(fn))
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2815, in fromarray
    raise TypeError("Cannot handle this data type: %s, %s" % typekey) from e
TypeError: Cannot handle this data type: (1, 1, 224), <f4
2023-06-17 20:48:19,759 ERROR: Exception on /neumoscan [POST] [in /home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py:1414]
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2813, in fromarray
    mode, rawmode = _fromarray_typemap[typekey]
KeyError: ((1, 1, 224, 3), '<f4')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py", line 78, in analizar_imagen
    pred = model.predict(image_tensor)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 321, in predict
    inp,preds,_,dec_preds = self.get_preds(dl=dl, with_input=True, with_decoded=True)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 308, in get_preds
    self._do_epoch_validate(dl=dl)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 244, in _do_epoch_validate
    with torch.no_grad(): self._with_events(self.all_batches, 'validate', CancelValidException)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 199, in _with_events
    try: self(f'before_{event_type}');  f()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 205, in all_batches
    for o in enumerate(self.dl): self.one_batch(*o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 127, in __iter__
    for b in _loaders[self.fake_l.num_workers==0](self.fake_l):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 628, in __next__
    data = self._next_data()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 671, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 43, in fetch
    data = next(self.dataset_iter)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 138, in create_batches
    yield from map(self.do_batch, self.chunkify(res))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/basics.py", line 230, in chunked
    res = list(itertools.islice(it, chunk_sz))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 153, in do_item
    try: return self.after_item(self.create_item(s))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 160, in create_item
    if self.indexed: return self.dataset[s or 0]
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in __getitem__
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in <listcomp>
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 417, in __getitem__
    return self._after_item(res) if is_indexer(idx) else res.map(self._after_item)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 377, in _after_item
    def _after_item(self, o): return self.tfms(o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 208, in __call__
    def __call__(self, o): return compose_tfms(o, tfms=self.fs, split_idx=self.split_idx)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 158, in compose_tfms
    x = f(x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 81, in __call__
    def __call__(self, x, **kwargs): return self._call('encodes', x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 91, in _call
    return self._do_call(getattr(self, fn), x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 97, in _do_call
    return retain_type(f(x, **kwargs), x, ret)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/dispatch.py", line 120, in __call__
    return f(*args, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/vision/core.py", line 122, in create
    if isinstance(fn,ndarray): return cls(Image.fromarray(fn))
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2815, in fromarray
    raise TypeError("Cannot handle this data type: %s, %s" % typekey) from e
TypeError: Cannot handle this data type: (1, 1, 224, 3), <f4
2023-06-17 20:56:47,462 ERROR: Exception on /neumoscan [POST] [in /home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py:1414]
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2813, in fromarray
    mode, rawmode = _fromarray_typemap[typekey]
KeyError: ((1, 1, 3), '<f4')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py", line 78, in analizar_imagen
    pred = model.predict(image_tensor)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 321, in predict
    inp,preds,_,dec_preds = self.get_preds(dl=dl, with_input=True, with_decoded=True)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 308, in get_preds
    self._do_epoch_validate(dl=dl)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 244, in _do_epoch_validate
    with torch.no_grad(): self._with_events(self.all_batches, 'validate', CancelValidException)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 199, in _with_events
    try: self(f'before_{event_type}');  f()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 205, in all_batches
    for o in enumerate(self.dl): self.one_batch(*o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 127, in __iter__
    for b in _loaders[self.fake_l.num_workers==0](self.fake_l):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 628, in __next__
    data = self._next_data()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 671, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 43, in fetch
    data = next(self.dataset_iter)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 138, in create_batches
    yield from map(self.do_batch, self.chunkify(res))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/basics.py", line 230, in chunked
    res = list(itertools.islice(it, chunk_sz))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 153, in do_item
    try: return self.after_item(self.create_item(s))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 160, in create_item
    if self.indexed: return self.dataset[s or 0]
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in __getitem__
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in <listcomp>
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 417, in __getitem__
    return self._after_item(res) if is_indexer(idx) else res.map(self._after_item)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 377, in _after_item
    def _after_item(self, o): return self.tfms(o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 208, in __call__
    def __call__(self, o): return compose_tfms(o, tfms=self.fs, split_idx=self.split_idx)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 158, in compose_tfms
    x = f(x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 81, in __call__
    def __call__(self, x, **kwargs): return self._call('encodes', x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 91, in _call
    return self._do_call(getattr(self, fn), x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 97, in _do_call
    return retain_type(f(x, **kwargs), x, ret)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/dispatch.py", line 120, in __call__
    return f(*args, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/vision/core.py", line 122, in create
    if isinstance(fn,ndarray): return cls(Image.fromarray(fn))
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2815, in fromarray
    raise TypeError("Cannot handle this data type: %s, %s" % typekey) from e
TypeError: Cannot handle this data type: (1, 1, 3), <f4
2023-06-17 20:57:50,824 ERROR: Exception on /neumoscan [POST] [in /home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py:1414]
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2813, in fromarray
    mode, rawmode = _fromarray_typemap[typekey]
KeyError: ((1, 1, 3), '<f4')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/flask/app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/home/weckerleben/Documents/deep-learning-pneumonia-diagnosis-lung-xrays/api/app.py", line 78, in analizar_imagen
    pred = model.predict(image_tensor)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 321, in predict
    inp,preds,_,dec_preds = self.get_preds(dl=dl, with_input=True, with_decoded=True)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 308, in get_preds
    self._do_epoch_validate(dl=dl)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 244, in _do_epoch_validate
    with torch.no_grad(): self._with_events(self.all_batches, 'validate', CancelValidException)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 199, in _with_events
    try: self(f'before_{event_type}');  f()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/learner.py", line 205, in all_batches
    for o in enumerate(self.dl): self.one_batch(*o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 127, in __iter__
    for b in _loaders[self.fake_l.num_workers==0](self.fake_l):
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 628, in __next__
    data = self._next_data()
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 671, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/weckerleben/.local/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 43, in fetch
    data = next(self.dataset_iter)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 138, in create_batches
    yield from map(self.do_batch, self.chunkify(res))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/basics.py", line 230, in chunked
    res = list(itertools.islice(it, chunk_sz))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 153, in do_item
    try: return self.after_item(self.create_item(s))
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/load.py", line 160, in create_item
    if self.indexed: return self.dataset[s or 0]
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in __getitem__
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 458, in <listcomp>
    res = tuple([tl[it] for tl in self.tls])
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 417, in __getitem__
    return self._after_item(res) if is_indexer(idx) else res.map(self._after_item)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/data/core.py", line 377, in _after_item
    def _after_item(self, o): return self.tfms(o)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 208, in __call__
    def __call__(self, o): return compose_tfms(o, tfms=self.fs, split_idx=self.split_idx)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 158, in compose_tfms
    x = f(x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 81, in __call__
    def __call__(self, x, **kwargs): return self._call('encodes', x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 91, in _call
    return self._do_call(getattr(self, fn), x, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/transform.py", line 97, in _do_call
    return retain_type(f(x, **kwargs), x, ret)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastcore/dispatch.py", line 120, in __call__
    return f(*args, **kwargs)
  File "/home/weckerleben/.local/lib/python3.10/site-packages/fastai/vision/core.py", line 122, in create
    if isinstance(fn,ndarray): return cls(Image.fromarray(fn))
  File "/usr/lib/python3/dist-packages/PIL/Image.py", line 2815, in fromarray
    raise TypeError("Cannot handle this data type: %s, %s" % typekey) from e
TypeError: Cannot handle this data type: (1, 1, 3), <f4
